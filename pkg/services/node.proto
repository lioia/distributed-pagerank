syntax = "proto3";

import public "google/protobuf/empty.proto";

option go_package = "github.com/lioia/distributed-pagerank/pkg/services";

package services;

service Node {
  rpc StateUpdate(google.protobuf.Empty) returns (State) {}
  rpc NodeJoin(google.protobuf.Empty) returns (Constants) {}
  rpc UploadGraph(GraphUpload) returns (Graph) {}
}

service Client {
  rpc SendGraph(Graph) returns (google.protobuf.Empty) {}
}

message State {
  int32 phase = 1;
  int32 role = 2;
  Graph graph = 6;
  repeated string others = 7;
}

message Constants {
  string workQueue = 1;
  string resultQueue = 2;
  double c = 3;
  double threshold = 4;
}

message GraphUpload {
  string fromConnection = 1;
  bytes contents = 2;
}

message MapIntDouble { map<int32, double> map = 1; }

message Graph { map<int32, GraphNode> graph = 1; }

message GraphNode {
  int32 id = 1;                // Node ID
  double rank = 3;             // Current PageRank
  double eValue = 4;           // E probability vector for this node
  repeated int32 outLinks = 2; // Node IDs this node points to
}

message Job {
  int32 type = 1; // 0: Map job; 1: Reduce job
  map<int32, GraphNode> mapData = 2;
  Reduce reduceData = 3;
}

message Reduce {
  repeated GraphNode node = 1;
  map<int32, double> sums = 2;
}
